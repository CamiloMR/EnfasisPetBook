trigger:
- main

stages:
- stage: Build
  jobs:
  - job: Build
    pool:
      vmImage: ubuntu-latest

    variables:
      sonarCloudOrganization: 'camilomr'
      sonarCloudProjectKey: 'PetBook'
      sonarCloudProjectName: 'PetBook'
      imageRepository: 'docker-petbook'

    steps:
    - task: SonarCloudPrepare@1
      displayName: 'SonarCloud Prepare Analyze'
      inputs:
        SonarCloud: 'Service connection Sonar Cloud'
        organization: '$(sonarCloudOrganization)'
        scannerMode: 'CLI'
        configMode: 'manual'
        cliProjectKey: '$(sonarCloudProjectKey)'
        cliProjectName: '$(sonarCloudProjectName)'
        cliSources: '.'
        
    - task: Npm@1
      displayName: 'npm install'
      inputs:
        command: 'install'
      
    - task: Npm@1
      displayName: 'npm run build'
      inputs:
        command: 'custom'
        customCommand: 'run build'

    - task: Npm@1
      displayName: 'npm run test-ci'
      inputs:
        command: 'custom'
        customCommand: 'run test-ci'
    
    - task: SonarCloudAnalyze@1
      displayName: 'SonarCloud Analyze'
    
    - task: SonarCloudPublish@1
      displayName: 'SonarCloud Quality Gate'
      inputs:
        pollingTimeoutSec: '300'
        
    - task: sonarcloud-buildbreaker@2
      displayName: 'Sonar Cloud Build Breaker'
      inputs:
        SonarCloud: 'Service connection Sonar Cloud'
        organization: '$(sonarCloudOrganization)'

    - task: ArchiveFiles@2
      displayName: 'Comprimir archivos a zip'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/dist'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/frontpetbook.zip'
        replaceExistingArchive: true

    - task: S3Upload@1
      displayName: 'Subir archivo a S3'
      inputs:
        awsCredentials: 'Service connection bucket s3'
        regionName: 'us-east-1'
        bucketName: 'mrstorage'
        sourceFolder: '$(Build.ArtifactStagingDirectory)'
        globExpressions: '**/*.zip'
    
    - task: Docker@2
      displayName: 'Build image docker'
      inputs:
        containerRegistry: 'Service connection docker hub'
        command: 'build'
        Dockerfile: '**/Dockerfile'
        buildContext: '$(System.DefaultWorkingDirectory)/dist'
    
    - task: Docker@2
      displayName: 'Push image docker'
      inputs:
        containerRegistry: 'Service connection docker hub'
        command: 'push'